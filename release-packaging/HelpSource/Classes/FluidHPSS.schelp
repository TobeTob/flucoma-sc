TITLE:: FluidHPSS
summary:: (put short description here)
categories:: Libraries>FluidDecomposition
related:: Guides/FluCoMa, Guides/FluidDecomposition

DESCRIPTION::
It is part of the Fluid Decomposition Toolkit of the FluCoMa project. footnote::
This  was made possible thanks to the FluCoMa project (http://www.flucoma.org/) funded by the European Research Council (https://erc.europa.eu/) under the European Unionâ€™s Horizon 2020 research and innovation programme (grant agreement No 725899).::


CLASSMETHODS::

METHOD:: ar
(describe method here)

ARGUMENT:: in
(describe argument here)

ARGUMENT:: percussiveFilterSize
(describe argument here)

ARGUMENT:: harmonicFilterSize
(describe argument here)

ARGUMENT:: percussiveThreshold
(describe argument here)

ARGUMENT:: harmonicThreshold
(describe argument here)

ARGUMENT:: windowSize
(describe argument here)

ARGUMENT:: hopSize
(describe argument here)

ARGUMENT:: fftSize
(describe argument here)

returns:: (describe returnvalue here)


INSTANCEMETHODS::

METHOD:: checkInputs
(describe method here)

returns:: (describe returnvalue here)

METHOD:: init
(describe method here)

ARGUMENT::  ... theInputs
(describe argument here)

returns:: (describe returnvalue here)


EXAMPLES::

code::
(some example code)
	s.reboot
b = Buffer.cueSoundFile(s,"/Users/owen/Desktop/denoise_stn/sources/01-mix.wav",0,1)

//The world's most expensive stereoizer
({
		var hpss = FluidHPSS.ar(DiskIn.ar(1,b.bufnum,loop:1),harmonicBinaryMask:1,percussiveBinaryMask:1,  harmonicThreshAmp1:SinOsc.kr(1.5,mul:20,add:20),harmonicThreshAmp2:SinOsc.kr(3,mul:25,add:25), percussiveThreshAmp1:SinOsc.kr(1.6,0,mul:30,add:30),percussiveThreshAmp2:SinOsc.kr(1.7,0,mul:17,add:24));
		[hpss.at(2)  + 0.5 * hpss.at(0),hpss.at(1) + 0.5 * hpss.at(0)];
}.play;)


::